# automation:
  # Inspired/Copy from https://philhawthorne.com/making-home-assistants-presence-detection-not-so-binary/
  - alias: PTR-Mark person as just arrived
    mode: queued
    triggers:
      - platform: state
        from: 'not_home'
        to: 'home'
        entity_id: &persons
          - person.monica
          - person.manolo
    actions:
      - service: input_select.select_option
        data_template:
          entity_id: >
            {% if trigger.entity_id == 'person.manolo' %}
              input_select.manolo_status_dropdown
            {% else %}
              input_select.monica_status_dropdown
            {% endif %}
          option: Just Arrived

  - alias: PTR-Mark person as home
    mode: queued
    triggers:
      - platform: state
        entity_id: &input-select-people-status
          - input_select.manolo_status_dropdown
          - input_select.monica_status_dropdown
        to: 'Just Arrived'
        for:
          minutes: 10
      - platform: state
        entity_id: *input-select-people-status
        from: 'Just Left'
        to: 'Just Arrived'
    actions:
      - service: input_select.select_option
        data_template:
          entity_id: >
            {% if trigger.entity_id == 'input_select.manolo_status_dropdown' %}
              input_select.manolo_status_dropdown
            {% else %}
              input_select.monica_status_dropdown
            {% endif %}
          option: Home

  - alias: PTR-Mark person as just left
    mode: queued
    triggers:
      - platform: state
        entity_id: *persons
        from: 'home'
        to: 'not_home'
    actions:
      - service: input_select.select_option
        data_template:
          entity_id: >
            {% if trigger.entity_id == 'person.manolo' %}
              input_select.manolo_status_dropdown
            {% else %}
              input_select.monica_status_dropdown
            {% endif %}
          option: Just Left

  - alias: PTR-Mark person as away
    mode: queued
    triggers:
      - platform: state
        entity_id: *input-select-people-status
        to: 'Just Left'
        for:
          minutes: 10
    actions:
      - service: input_select.select_option
        data_template:
          entity_id: >
            {% if trigger.entity_id == 'input_select.manolo_status_dropdown' %}
              input_select.manolo_status_dropdown
            {% else %}
              input_select.monica_status_dropdown
            {% endif %}
          option: Away

  - alias: PTR-Mark person as extended away
    mode: queued
    triggers:
      - platform: state
        entity_id: *input-select-people-status
        to: 'Away'
        for:
          hours: 24
    actions:
      - service: input_select.select_option
        data_template:
          entity_id: >
            {% if trigger.entity_id == 'input_select.manolo_status_dropdown' %}
              input_select.manolo_status_dropdown
            {% else %}
              input_select.monica_status_dropdown
            {% endif %}
          option: Extended Away

  # Update home occupancy when some people state changed
  # Myself
  - alias: PTR-Update home occupancy
    mode: queued
    triggers:
      - platform: state
        # from: 'not_home'
        # to: 'home'
        entity_id: *input-select-people-status
    actions:
      - service: input_select.select_option
        data_template:
          entity_id: input_select.home_occupancy_status_dropdown
          option: >
            {%- if states(trigger.entity_id) == states('input_select.home_occupancy_status_dropdown') -%}
              {{ states(trigger.entity_id) }}
            {%- else -%}
              {# Loop over all states and get the most restrictive #}
              {%- set status_json = {
                  "Home": 0,
                  "Just Arrived": 1,
                  "Just Left": 2,
                  "Away": 3,
                  "Extended Away": 4
              } -%}
              {%- set next_home_occupancy = namespace(value=status_json['Extended Away'],name='Extended Away') -%}
              {%- for tracker in expand('group.people_status') if status_json[tracker.state] < next_home_occupancy.value -%}
                  {%- set next_home_occupancy.value = status_json[tracker.state] -%}
                  {%- set next_home_occupancy.name = tracker.state -%}
              {%- endfor -%}
              {{next_home_occupancy.name}}
            {%- endif -%}
