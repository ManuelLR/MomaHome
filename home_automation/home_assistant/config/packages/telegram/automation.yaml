# automation:

  - alias: AUT-Telegram turn on device
    mode: restart
    initial_state: 'on'
    trigger:
      - platform: event
        event_type: telegram_command
        event_data: &telegram_turn_on_device
          command: "/turn_on"
      - platform: event
        event_type: telegram_callback
        event_data: *telegram_turn_on_device
    action:
      - service: switch.turn_on
        data_template:
          entity_id: >
              {% if trigger.event.event_type == 'telegram_command' %}
                {{trigger.event.data["args"][0]|default('entity not passed')}}
              {% elif trigger.event.event_type == 'telegram_callback' %}
                {{trigger.event.data["data"].split(' ')[1]|default('entity not passed')}}
              {% else %}
                switch.event_not_recognized
              {% endif %}
      # Answer to the telegram callback if needed
      - condition: template
        value_template: "{{  trigger.event.event_type == 'telegram_callback' }}"
      - service: telegram_bot.answer_callback_query
        data:
          callback_query_id: "{{ trigger.event.data.id }}"
          message: "Done!"
