# automation:
  - alias: AUT-No energy in house
    mode: queued
    trigger:
      # - platform: state
      #   entity_id: sensor.ups_battery
      #   from: '100'
      - platform: state
        entity_id: sensor.ups_battery
        from: 'ONLINE'
    action:
      - service: remote.send_command
        data:
          entity_id: remote.sony_bravia_tv
          command: PowerOff
      - service: script.notify_in_home_or_all
        data:
          title: 'ALERT: No energy in home !'
          message: >
            Ey, we detected that the remaining UPS battery is `{{ states('sensor.ups_battery') }}%`
            so probably the power has gone out.

            With this load (`{{ states('sensor.ups_load') }}%`) the expected time of battery 
            is `{{ states('sensor.ups_time_left') }} minutes`.

            Any way, I powered off the tv to save energy.
      - service: notify.manolo
        data:
          title: 'Debug UPS'
          message: |
            STATUS: `{{ states('sensor.ups_status') }}`
            STATFLAG: `{{ states('sensor.ups_status_flag') }}`
            XOFFBATT: `{{ states('sensor.ups_transfer_from_battery') }}`
            TONBATT: `{{ states('sensor.ups_time_on_battery') }}`
            CUMONBATT: `{{ states('sensor.ups_total_time_on_battery') }}`

  - alias: AUT-Energy back in house
    mode: queued
    trigger:
      # - platform: state
      #   entity_id: sensor.ups_battery
      #   to: '100'
      - platform: state
        entity_id: sensor.ups_battery
        from: 'ONBATTERY'
    action:
      - service: script.notify_in_home_or_all
        data:
          title: 'Energy back in home !'
          message: >
            Ey, the UPS has power again.
            The current battery is `{{ states('sensor.ups_battery') }}%`.
          data:
            disable_notification: True
      - service: notify.manolo
        data:
          title: 'Debug UPS'
          message: |
            STATUS: `{{ states('sensor.ups_status') }}`
            STATFLAG: `{{ states('sensor.ups_status_flag') }}`
            XOFFBATT: `{{ states('sensor.ups_transfer_from_battery') }}`
            TONBATT: `{{ states('sensor.ups_time_on_battery') }}`
            CUMONBATT: `{{ states('sensor.ups_total_time_on_battery') }}`
