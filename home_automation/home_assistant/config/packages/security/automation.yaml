# automation:
  - alias: AUT-New device found
    initial_state: 'on'
    mode: parallel
    trigger:
      - platform: event
        event_type: device_tracker_new_device
    action:
      - service: script.notify_in_home_or_all
        data: &data-alert-new-device
          title: 'ALERT: New device found !'
          message: 'New device called `{{ trigger.event.data.host_name }}` with MAC `{{ trigger.event.data.mac }}` found'
      - service: notify.manolo
        data: *data-alert-new-device

  - alias: AUT-Notify failed login attempt
    initial_state: 'on'
    mode: parallel
    trigger:
      - platform: state
        entity_id: persistent_notification.http_login
    condition:
      - condition: template
        value_template: "{{ trigger.to_state.state != 'None' }}"
    action:
      service: notify.manolo
      data:
        title: "*{{ state_attr('persistent_notification.http_login', 'title') }} !*"
        message: "{{ state_attr('persistent_notification.http_login', 'message') }}"

  - alias: AUT-Notify ip_banned
    initial_state: 'on'
    mode: parallel
    trigger:
      - platform: state
        entity_id: persistent_notification.ip_ban
    condition:
      - condition: template
        value_template: "{{ trigger.to_state.state != 'None' }}"
    action:
      - alias: "Set variables"
        variables:
            # Extracted from a message like: Too many login attemps from xxx.xxx.xxx.xxx
          banned_ip: "{{ state_attr('persistent_notification.ip_ban', 'message').split(' ') | last }}"
      - service: notify.manolo
        data:
          title: "*{{ state_attr('persistent_notification.ip_ban', 'title') }} !*"
          message: "{{ state_attr('persistent_notification.ip_ban', 'message') }}"
          data:
            inline_keyboard:
              - 'Unban {{ banned_ip }} and restart Home Assistant:/unban_ip {{ banned_ip }}'

  - alias: AUT-Unban IP
    mode: restart
    initial_state: 'on'
    trigger:
      - platform: event
        id: event_telegram_command
        event_type: telegram_command
        event_data: &telegram_unban_ip_device
          command: "/unban_ip"
        variables:
          ip_to_unban: "{{ trigger.event.data['args'][0] }}"
      - platform: event
        id: event_telegram_callback
        event_type: telegram_callback
        event_data: *telegram_unban_ip_device
        variables:
          ip_to_unban: "{{ trigger.event.data['data'].split(' ')[1] }}"
    action:
      - service: shell_command.unban_ip
        data:
          IP_TO_UNBAN: "{{ ip_to_unban }}"
      - if: "{{ trigger.id == 'event_telegram_callback' }}"
        then:
          - service: telegram_bot.answer_callback_query
            data:
              callback_query_id: "{{ trigger.event.data.id }}"
              message: "Unbanned and restarting HomeAssistant"
      - service: homeassistant.restart
