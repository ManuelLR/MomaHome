# automation:
  # - alias: AUT-LightForReadOnBed
  #   initial_state: 'on'
  #   trace:
  #     stored_traces: 5
  #   mode: 'queued'
  #   trigger:
  #     - platform: device
  #       domain: zha
  #       device_id: fc590f181eaddcfcfc6d6984c7ec76c5
  #       type: remote_button_double_press
  #       subtype: turn_on
  #   action:
  #     - service: scene.turn_on
  #       entity_id: scene.ReadOnBedroom
  #       # data:
  #       #   # If enabled, brightness didn't change
  #       #   transition: 2.5
  # - alias: AUT-LightForSleep
  #   initial_state: 'on'
  #   trace:
  #     stored_traces: 5
  #   mode: 'queued'
  #   trigger:
  #     - platform: device
  #       domain: zha
  #       device_id: fc590f181eaddcfcfc6d6984c7ec76c5
  #       type: remote_button_short_press
  #       subtype: turn_on
  #   action:
  #     - service: scene.turn_on
  #       entity_id: scene.BeforeSleepOnBedroom
  #       # data:
  #       #   # If enabled, brightness didn't change
  #       #   transition: 2.5
  # - alias: AUT-MaxLightOnBedroom
  #   initial_state: 'on'
  #   trace:
  #     stored_traces: 5
  #   mode: 'queued'
  #   trigger:
  #     - platform: device
  #       domain: zha
  #       device_id: fc590f181eaddcfcfc6d6984c7ec76c5
  #       type: remote_button_long_press
  #       subtype: dim_up
  #   action:
  #     - service: scene.turn_on
  #       entity_id: scene.MaxIlluminationOnBedroom
  #       # data:
  #       #   # If enabled, brightness didn't change
  #       #   transition: 2.5


### WIP
  - alias: AUT-NightstandButtons
    id: 'automation_nightstand_buttons'
    initial_state: 'on'
    trace:
      stored_traces: 5
    mode: 'queued'
    trigger_variables:
      monica_button_id: &monica_button_id d207bfdca66e300274e57e4d3ff883f6
      manolo_button_id: &manolo_button_id 66e6c2331edc3c62560fab9b8285ad85
      # We're going to define dummy variables that will be reused by the triggers
      ### Trigged Devices
      dummy_template_to_be_reused_by_monica: &monica_button
        platform: device
        domain: zha
        device_id: *monica_button_id
      dummy_template_to_be_reused_by_manolo: &manolo_button
        platform: device
        domain: zha
        device_id: *manolo_button_id
      ### Trigger Pulsations
      dummy_template_to_be_reused_by_single_press_01: &single_press_01
        type: remote_button_short_press
        subtype: button_1
        variables:
          scene_alias: beforeSleep
          scene_data:
            state: "on"
            brightness: 3
            color_temp: 454
      dummy_template_to_be_reused_by_double_press_01: &double_press_01
        type: remote_button_double_press
        subtype: button_1
        variables:
          scene_alias: readOnBed
          scene_data:
            state: "on"
            brightness: 180
            color_temp: 285
      dummy_template_to_be_reused_by_long_press_01: &long_press_01
        type: remote_button_long_press
        subtype: button_1
        variables:
          scene_alias: maxIllumination
          scene_data:
            state: "on"
            brightness: 255
            color_temp: 250
      dummy_template_to_be_reused_by_single_press_02: &single_press_02
        type: remote_button_short_press
        subtype: button_2
        variables:
          scene_alias: singleOff
          scene_data:
            state: "off"
      dummy_template_to_be_reused_by_double_press_02: &double_press_02
        type: remote_button_double_press
        subtype: button_2
        variables: &scene_all_off
          scene_alias: allOff
          scene_data:
            state: "off"
      dummy_template_to_be_reused_by_long_press_02: &long_press_02
        type: remote_button_long_press
        subtype: button_2
        variables: *scene_all_off
    trigger:
      - <<: *monica_button
        <<: *single_press_01
      - <<: *monica_button
        <<: *double_press_01
      - <<: *monica_button
        <<: *long_press_01
      - <<: *monica_button
        <<: *single_press_02
      - <<: *monica_button
        <<: *double_press_02
      - <<: *monica_button
        <<: *long_press_02
      - <<: *manolo_button
        <<: *single_press_01
      - <<: *manolo_button
        <<: *double_press_01
      - <<: *manolo_button
        <<: *long_press_01
      - <<: *manolo_button
        <<: *single_press_02
      - <<: *manolo_button
        <<: *double_press_02
      - <<: *manolo_button
        <<: *long_press_02
    action:
      - alias: "Define affected devices"
        variables:
          entity_to_configure: >-
            {% set all_lights_on = is_state('light.monica_nightstand_light', 'on') and is_state('light.manolo_nightstand_light', 'on') %}
            {% if ((all_lights_on) or (scene_alias in ['allOff', 'maxIllumination'])) and (scene_alias not in ['singleOff']) %}
              light.nighstand_bedroom_lights
            {% elif trigger.event.data.device_id == monica_button_id %}
              light.monica_nightstand_light
            {% elif trigger.event.data.device_id == manolo_button_id %}
              light.manolo_nightstand_light
            {% endif %}
      # - service: light.turn_on
      #   target:
      #     entity_id: "{{ entity_to_configure }}"
      #   data:
      #     brightness: 180
      #     color_temp: 285
      - service: scene.apply
        data:
          entities:
            "{{ entity_to_configure }}": "{{ scene_data }}"
      # - choose:
      #     - conditions:
      #         # Check if was triggered by Monica with the device id
      #         - condition: template
      #           value_template: "{{ trigger.event.data.device_id == monica_button_id }}"
      #       sequence:
      #         # - service: light.turn_on
      #         #   target:
      #         #     entity_id:
      #         #       - light.monica_nightstand_light
      #         - service: scene.apply
      #           data:
      #             entities:
      #               light.monica_nightstand_light: *read_on_bedroom
      #     - conditions:
      #         # Check if was triggered by Manolo with the device id
      #         - condition: template
      #           value_template: "{{ trigger.event.data.device_id == manolo_button_id }}"
      #       sequence:
      #         # - service: light.turn_on
      #         #   target:
      #         #     entity_id: light.manolo_nightstand_light
      #         #   data:
      #         #     brightness: 180
      #         #     color_temp: 285
      #         - service: scene.apply
      #           data:
      #             entities:
      #               light.manolo_nightstand_light: *read_on_bedroom
