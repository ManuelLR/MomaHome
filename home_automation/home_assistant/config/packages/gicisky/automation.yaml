# automation:
  - alias: "AUT-Front Door electronic label"
    description: "This automation is used to update the information shown in the electronic label."
    id: "aut_front_door_electronic_label"
    mode: single
    triggers:
      - trigger: event
        event_type: manual_event
        id: "trigger_manual_event"
      # Trigger if a monitored by label device is turned on
      - trigger: numeric_state
        entity_id:
          - sensor.amount_turned_on_entities_monitored_by_label
        above: 0
        id: "trigger_turned_on_devices"
        for:
          minutes: 3
      # Trigger if a monitored by label device is turned off
      - trigger: numeric_state
        entity_id:
          - sensor.amount_turned_on_entities_monitored_by_label
        below: 1
        id: "trigger_turned_off_devices"
        for:
          minutes: 3
      ## Check if we should update the display hourly 
      - trigger: time_pattern
        hours: "*"
        minutes: 3
        id: "trigger_hourly"
    conditions:
      - or:
          - alias: "Last update is more than 4 hours ago"
            condition: template
            value_template: >
              {% set last_update = states('sensor.gicisky_92975006_last_update_time') %}
              {% if last_update == 'unavailable' or last_update == 'unknown' %}
                {{ true }}
              {% else %}
                {% set time_diff = (now() - (last_update| as_datetime)).total_seconds() / 3600 %}
                {{ time_diff >= 3.8 }}
              {% endif %}
          - alias: "Not check last time updated for next triggers"
            condition: trigger
            id:
              - "trigger_manual_event"
              - "trigger_turned_on_devices"
              - "trigger_turned_off_devices"
    variables:
      gicisky_write_dry_run: true
      # gicisky_device_id: "f93ebcba62a0eaf2f06932acdc6b11ba"
      # # sensor.gicisky_92975071_last_update_time
      gicisky_device_id: "e7c82815299126f4297b877d0cc343d4"
      # sensor.gicisky_92975006_last_update_time
      section_weather_y_start: 32
      section_reminders_y_start: 177
      weather_graphs_height: >
        {{ (53/2)|round(0,'ceil')|int }}
      weather_wind_speed_alert: 20
      weather_wind_speed_max_shown: 40
      weather_precipitation_alert: 0.25
      weather_precipitation_max_shown: 1.2
      example_multiline_text: |-
        MomaHome
        1
        2
      reminders_icons:
        # turned on devices
        - icon: mdi:lightbulb-on
          enabled: >
            {{ states('sensor.amount_turned_on_entities_monitored_by_label')|int > 0 }}
        # Washing machine
        - icon: mdi:washing-machine
          enabled: >
            {{ states('sensor.washing_machine_status') != 'Off' }}
        # Garbage
        - icon: mdi:garbage-can
          enabled: >
            {{ true }}
        # Lift bags
        - icon: mdi:bag-suitcase
          enabled: >
            {{ false }}
        # Car
        - icon: mdi:car
          enabled: >
            {{ false }}
        # Dummy
        - icon: mdi:apple-keyboard-caps
          enabled: >
            {{ false }}
    actions:
      - action: weather.get_forecasts
        target:
          entity_id: weather.aemet
        data:
          type: hourly
        response_variable: weather_forecasts
      - variables:
          weather_forecasts_10h: >
            {{ weather_forecasts['weather.aemet'].forecast[0:10] }}
          weather_max_temperature: >
            {{ weather_forecasts_10h|map(attribute='temperature')|max|int }}
          weather_min_temperature: >
            {{ weather_forecasts_10h|map(attribute='temperature')|min|int }}
          weather_wind_speed_10h: >
            {{ weather_forecasts_10h|map(attribute='wind_speed')|list }}
          weather_precipitation_10h: >
            {{ weather_forecasts_10h|map(attribute='precipitation')|list }}
      - variables:
          reminders_section: |-
            {# Comment to force be understanded as object #}
            {% set reminders_enabled = reminders_icons|selectattr("enabled")|list %}
            {% set n_reminders_enabled = reminders_enabled|length %}
            {% set row_size = 42 %}
            {% set n_rows = (n_reminders_enabled / 3)|round(0,'ceil')|int %}
            {% set y_deviation = 0 if n_rows == 2 else ((row_size/2)|round(0,'ceil')|int) %}
            [
            {% set counter = namespace(value=0) %}
            {% set i_x = namespace(value=0) %}
            {% set i_y = namespace(value=0) %}
            {% for reminder in reminders_enabled %}
              {
                "type": "circle",
                "x": {{ 21 + i_x.value * row_size }},
                "y": {{ 21 + i_y.value * row_size + section_reminders_y_start + y_deviation }},
                "radius": 18,
                "fill": "black",
                "width": 0
              },
              {
                "type": "icon",
                "x": {{ 21 + i_x.value * row_size }},
                "y": {{ 21 + i_y.value * row_size + section_reminders_y_start + y_deviation }},
                "size": 26,
                "color": "white",
                "value": "{{ reminder.icon }}",
                "anchor": "mm"
              },
              {% set i_x.value = i_x.value + 1 %}
              {% if i_x.value == 3 %}
                {% set i_x.value = 0 %}
                {% set i_y.value = i_y.value + 1 %}
              {% endif %}
            {% endfor %}
            {
              "type": "multiline",
              "value": {{ example_multiline_text|tojson| replace("\\n", "<br/>") }},
              "x": 0,
              "start_y": {{ section_reminders_y_start + 2 * 42 }},
              "y_padding": 0,
              "delimiter": "<br/>",
              {# "max_width": 15, #}
              "anchor": "lt",
              "size": 14,
              "offset_y": 15,
              "color": "black"
            },
            ]
      - variables:
          weather_graph_precipitation_10h: |-
            {# Comment to force be understanded as object #}
            [
            {% for i in range(weather_precipitation_10h|length) %}
              {
                "type": "rectangle",
                "x_start": {{ 22 + i * 10 }},
                "x_end": {{ 22 + 8 + i * 10 }},
                "y_start": {{ section_weather_y_start + 100 - ([(weather_precipitation_10h[i] / weather_precipitation_max_shown * weather_graphs_height), weather_graphs_height]|min|round(0,'ceil')|int) }},
                "y_end": {{ section_weather_y_start + 100 }},
                "fill": "{{ 'red' if weather_precipitation_10h[i] > weather_precipitation_alert else 'black' }}",
                "width": 0
              },
            {% endfor %}
            ]
          weather_graph_wind_speed_10h: |-
            {# Comment to force be understanded as object #}
            [
            {% for i in range(weather_wind_speed_10h|length) %}
              {
                "type": "rectangle",
                "x_start": {{ 22 + i * 10 }},
                "x_end": {{ 22 + 8 + i * 10 }},
                "y_start": {{ section_weather_y_start + 114 }},
                "y_end": {{ section_weather_y_start + 114 + ([(weather_wind_speed_10h[i] / weather_wind_speed_max_shown * weather_graphs_height), weather_graphs_height]|min|round(0,'ceil')|int) }},
                "fill": "{{ 'red' if weather_wind_speed_10h[i] > weather_wind_speed_alert else 'black' }}",
                "width": 0
              },
            {% endfor %}
            ]
      - variables: 
          header_section: |-
            {# Comment to force be understanded as object #}
            [
              {
                "type": "rectangle",
                "x_start": 0,
                "x_end": 128,
                "y_start": 0,
                "y_end": 30,
                "fill": "black",
                "width": 0
              },
              {
                "type": "text",
                "value": "231",
                "x": 15,
                "y": 15,
                "size": 28,
                "color": "white",
                "anchor": "lm"
              },
              {
                "type": "icon",
                "value": "mdi:bell",
                "x": 118,
                "y": 15,
                "size": 24,
                "anchor": "rm",
                "color": "white"
              }
            ]
          weather_section: |-
            {# Comment to force be understanded as object #}
            [
              {
                "type": "icon",
                "value": "mdi:weather-{{ states('weather.climacell_daily') }}",
                "x": 0,
                "y": {{ section_weather_y_start }},
                "size": 75,
                "color": "black"
              },
              {
                "type": "icon",
                "value": "mdi:arrow-collapse-up",
                "anchor": "lm",
                "x": 76,
                "y": {{ section_weather_y_start + 17 }},
                "size": 11,
                "color": "black"
              },
              {
                "type": "icon",
                "value": "mdi:arrow-collapse-down",
                "anchor": "lm",
                "x": 76,
                "y": {{ section_weather_y_start + 44 }},
                "size": 11,
                "color": "black"
              },
              {
                "type": "text",
                "anchor": "rt",
                "x": 90,
                "y": {{ section_weather_y_start + 1 }},
                "max_width": 58,
                "size": 21,
                "value": "{{ weather_max_temperature }}°"
              },
              {
                "type": "text",
                "anchor": "rt",
                "x": 90,
                "y": {{ section_weather_y_start + 27 }},
                "max_width": 58,
                "size": 21,
                "value": "{{ weather_min_temperature }}°"
              },
              {
                "type": "icon",
                "value": "mdi:water",
                "anchor": "lm",
                "x": 0,
                "y": {{ section_weather_y_start + 100 - (weather_graphs_height/2)|round(0,'ceil')|int }},
                "size": 20,
                "color": "black"
              },
              {
                "type": "icon",
                "value": "mdi:clock-time-four-outline",
                "anchor": "mm",
                "x": 17,
                "y": {{ section_weather_y_start + 107 }},
                "size": 14,
                "color": "black"
              },
              {
                "type": "icon",
                "value": "mdi:weather-windy",
                "anchor": "lm",
                "x": 0,
                "y": {{ section_weather_y_start + 114 + (weather_graphs_height/2)|round(0,'floor')|int }},
                "size": 20,
                "color": "black"
              },
              {
                "type": "line",
                "x_start": 22,
                "y_start": {{ section_weather_y_start + 100 }},
                "x_end": 120,
                "y_end": {{ section_weather_y_start + 100 }},
                "fill": "black",
                "width": 1
              },
              {
                "type": "line",
                "x_start": 22,
                "y_start": {{ section_weather_y_start + 114 }},
                "x_end": 120,
                "y_end": {{ section_weather_y_start + 114 }},
                "fill": "black",
                "width": 1
              },
              {
                "type": "text",
                "anchor": "mm",
                "x": {{ 22 + 1 * 10}},
                "y": {{ section_weather_y_start + 107 }},
                "size": 11,
                "value": "{{ weather_forecasts_10h[1].datetime| as_timestamp |timestamp_custom('%H', local=true) }}"
              },
              {
                "type": "text",
                "anchor": "mm",
                "x": {{ 22 + 4 * 10}},
                "y": {{ section_weather_y_start + 107 }},
                "size": 11,
                "value": "{{ weather_forecasts_10h[4].datetime| as_timestamp |timestamp_custom('%H', local=true) }}"
              },
              {
                "type": "text",
                "anchor": "mm",
                "x": {{ 22 + 7 * 10}},
                "y": {{ section_weather_y_start + 107 }},
                "size": 11,
                "value": "{{ weather_forecasts_10h[7].datetime| as_timestamp |timestamp_custom('%H', local=true) }}"
              },
              {
                "type": "text",
                "anchor": "mm",
                "x": {{ 22 + 10 * 10}},
                "y": {{ section_weather_y_start + 107}},
                "size": 11,
                "value": "{{ (weather_forecasts_10h[9].datetime| as_datetime + timedelta(hours=1))| as_timestamp |timestamp_custom('%H', local=true) }}"
              }
            ]
      - action: gicisky.write
        target:
          device_id: >
            {{ gicisky_device_id }}
        data:
          rotate: 270
          background: white
          dry_run: >
            {{ gicisky_write_dry_run }}
          payload: >
            {{ (header_section) + (weather_section) + (weather_graph_precipitation_10h) + (weather_graph_wind_speed_10h) + (reminders_section) }}
